* Тестовое задание программисту RoR
* Общее описание
  В системах поддержки ИТ инфраструктуры есть такое понятие - конфигурационная единица (КЕ). Это любой объект инфраструктуры (сервер, сервер баз данных 
  MySQL, клиентское приложение и подобное). Вся инфраструктура ИТ в данном представлении является упорядоченной совокупностью КЕ (структура связей КЕ 
  между собой - дерево). Услуги, предоставляемые ИТ базируются на четко формализованных конечных КЕ и, таким образом, мы всегда можем понять что 
  происходит с сервисами ИТ при замене КЕ или ее сбое.
* Пример
  Есть 2 услуги для абонентов сети:
** Сетевая игра CS. Услуга состоит из двух базовых КЕ: сайт игры CS, набор серверов CS
** Внутренняя веб-информация о компании. Услуга зависит от КЕ: внутренний сайт компании
     
   КЕ сайт игры CS поддерживается следующими КЕ: скрипты сайта CS, виртуальный веб хост игры CS (состоит из КЕ сервера Apache и конфигурационного 
   файла для веб сервера CS), база данных games_cs (поддерживается КЕ сервер баз данных MYSQL)
   КЕ внутренний сайт компании поддерживается следующими КЕ: скрипты внутреннего сайта компании, виртуальный веб хост внутреннего сайта компании 
   (состоит из КЕ сервера Apache и конфигурационного файла для внутреннего сайта компании), база данных company_inner (поддерживается КЕ сервер 
   баз данных MYSQL)
   Таким образом описываются все услуги в компании, причем на указанном примере обе услуги используют общие КЕ: сервер Apache и сервер баз данных 
   MYSQL. Степень детализации КЕ зависит от параноидальности учитывающего
   Конфигурационная единица
   Конфигурационная единица является элементом (узлом) дерева и обладает собственными уникальными свойствами в зависимости от группы ее 
   принадлежности (для КЕ группы "Процессор" набор полей отличается от КЕ группы "Операционная система"). Для каждой из групп КЕ в настройках 
   системы задается набор уникальных полей этой группы. Поля могут быть любых типов (текст, число, дата, время и прочее), какие-то поля могут 
   быть обязательными, какие-то нет
   Для каждой конфигурационной единицы может указываться любое количество поддерживающих ее КЕ (структура дерева)

* Мониторинг доступности КЕ
   
  Для каждой конфигурационной единицы есть состояние доступности (булево), которое определяется автоматическими агентами системы мониторинга. 
  Необходима методика оповещения и автоматического определения неисправной узловой КЕ.
  Пример:
  Есть КЕ: база данных 1 и база данных 2, которые зависят от сервиса баз данных MySQL, который зависит от сервера баз данных. В случае выхода из 
  строя КЕ сервер баз данных, сработают также агенты и установят, что КЕ база данных 1,база данных 2, сервис баз данных MySQL тоже являются 
  неисправными. При решении задачи "в лоб" система сгенерирует 4 оповещения для каждой их КЕ (если связанных КЕ около 100 - 100 оповещений) и 
  это усложнит поиск неисправности. Необходимо определять узловую неисправность, генерировать одно оповещение и в нем указывать все связанные 
  КЕ.

* Задача
  Набросать предварительный код БД, моделей, контроллеров и вьюшек по следующим направлениям:
  1. Реализовать механизм добавления/изменения/удаления КЕ в древовидной структуре
  2. Реализовать механизм автоматического интеллектуального оповещения о недоступности КЕ
  3. Реализовать механизм динамических параметров для каждой КЕ
